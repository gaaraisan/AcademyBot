from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from dotenv import load_dotenv
import os

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env
load_dotenv()

# –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤—Å—è —Ç–æ–∫–µ–Ω
if TELEGRAM_TOKEN is None:
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤—ñ–Ω –≤–∫–∞–∑–∞–Ω–∏–π –≤ .env —Ñ–∞–π–ª—ñ.")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤—ñ—Ç–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    welcome_text = (
        "–¶–µ–π QR-–∫–æ–¥ ‚Äì —Ü–µ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç –≤—ñ–¥ –Ω–∞—Å —ñ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è –¥–æ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ Spinner. "
        "–¢–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É —Ç–∞ –¥—ñ–∑–Ω–∞–≤–∞–π—Å—è, —è–∫ —Å—Ç–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω–æ—é –Ω–∞—à–æ–≥–æ —Å–≤—ñ—Ç—É!"
    )

    keyboard = [[InlineKeyboardButton("–î–∞–ª—ñ!", callback_data="main_text")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ª–∏—à–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=welcome_text,
        reply_markup=reply_markup
    )

# –û—Å–Ω–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç —ñ–∑ –∫–Ω–æ–ø–∫–æ—é –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É
async def main_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.delete_message()

    text = (
        "–ú–∏ —Ö–æ—á–µ–º–æ –∑–∞–ø—Ä–æ—Å–∏—Ç–∏ —Ç–µ–±–µ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –∫–æ–º–∞–Ω–¥–∏ Spinner –Ω–∞ –æ–¥–Ω—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –ø–æ–∑–∏—Ü—ñ–π: \n\n"
        "‚Ä¢ Game Presenter (–≤–µ–¥—É—á–∏–π/–≤–µ–¥—É—á–∞) \n\n"
        "‚Ä¢ Shuffler (—à–∞—Ñ–ª–µ—Ä) \n\n"
        "–¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –æ–Ω–ª–∞–π–Ω-—Å—Ç—Ä—ñ–º—ñ–≤."
    )
    keyboard = [[InlineKeyboardButton("–¶—ñ–∫–∞–≤–æ", callback_data="main_tact")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, reply_markup=reply_markup)

# –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ç–µ–∫—Å—Ç —ñ–∑ –∫–Ω–æ–ø–∫–æ—é –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –æ–ø–∏—Å—É –ø–µ—Ä–µ–≤–∞–≥
async def main_tact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.delete_message()

    text = (
        "–£—è–≤–∏ —Å–µ–±–µ —É —Ä–æ–ª—ñ –∑—ñ—Ä–∫–∏ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ ‚Äî —É —Å–≤—ñ—Ç—ñ, –¥–µ –∫–æ–∂–Ω–∞ —Ç–≤–æ—è —Ñ—Ä–∞–∑–∞ –¥–æ–¥–∞—î –µ—Ç–µ—Ä–Ω –≥—Ä—ñ —ñ —à–∞—Ä–º—É, –∞ –∫–æ–∂–Ω–∞ –¥—ñ—è —Å—Ç–≤–æ—Ä—é—î –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.  "
        "–ú–∏ —à—É–∫–∞—î–º–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–ª–µ–≥—É, –∞ —Ç–æ–≥–æ, —Ö—Ç–æ –≤–º—ñ—î –±—É—Ç–∏ –Ω–∞ —Ö–≤–∏–ª—ñ, –≤—ñ–¥—á—É–≤–∞—Ç–∏ –º–æ–º–µ–Ω—Ç —ñ –∑–∞—Ä—è–¥–∂–∞—Ç–∏ —Å–≤–æ—î—é –µ–Ω–µ—Ä–≥—ñ—î—é.\n\n"
        "Spinner ‚Äî –Ω–æ–≤–∏–π, –∞–ª–µ –∫—Ä—É—Ç–∏–π –≥—Ä–∞–≤–µ—Ü—å –Ω–∞ —Ä–∏–Ω–∫—É, —ñ —Ç–∏ –º–æ–∂–µ—à —Å—Ç–∞—Ç–∏ "
        "—á–∞—Å—Ç–∏–Ω–æ—é –∫–æ–º–∞–Ω–¥–∏, –ø—Ä–æ —è–∫—É —â–µ –¥—ñ–∑–Ω–∞—é—Ç—å—Å—è. –¢–∏ –≥–æ—Ç–æ–≤–∏–π/-–∞?"
    )
    keyboard = [[InlineKeyboardButton("–ì–æ—Ç–æ–≤–∏–π/(-–∞)", callback_data="final")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(chat_id=update.effective_chat.id, text=text, reply_markup=reply_markup)

# –ó–∞–∫–ª—é—á–Ω–∏–π —Ç–µ–∫—Å—Ç —ñ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞ —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º —Å—Ç—É–¥—ñ—ó
async def final(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    final_text = (
        "–¢–≤—ñ–π —ñ–Ω—Ç–µ—Ä–µ—Å –≤–∞–∂–ª–∏–≤–∏–π –¥–ª—è –Ω–∞—Å! –ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –Ω–∞—à–æ–º—É —Ä–µ–∫—Ä—É—Ç–µ—Ä—É –í–ª–∞–¥—ñ @vladyslava_hr –±—É–¥—å-—è–∫–∏–π –µ–º–æ–¥–∑—ñ üì®, "
        "—â–æ–± –¥–∞—Ç–∏ –Ω–∞–º –∑–Ω–∞—Ç–∏, —â–æ —Ç–∏ –≥–æ—Ç–æ–≤–∏–π/-–∞ —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ü—é –ø–æ–¥–æ—Ä–æ–∂ —Ä–∞–∑–æ–º —ñ–∑ Spinner! "
        "–ß–µ–∫–∞—î–º–æ –Ω–∞ —Ç–µ–±–µ –≤ –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ, –¥–µ —Ç–∏ –¥—ñ–∑–Ω–∞—î—à—Å—è –≤—Å–µ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è —è—Å–∫—Ä–∞–≤–æ–≥–æ —Å—Ç–∞—Ä—Ç—É!"
    )

    with open(r"C:\Users\Ostap\Desktop\TeleBotAcademy\front.png", "rb") as photo:
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=InputFile(photo),
            caption=final_text
        )

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
def main() -> None:
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
    application.add_handler(CommandHandler("start", start))

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(main_text, pattern="main_text"))
    application.add_handler(CallbackQueryHandler(main_tact, pattern="main_tact"))
    application.add_handler(CallbackQueryHandler(final, pattern="final"))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    application.run_polling()
# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è —Å–∫—Ä–∏–ø—Ç –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ
if __name__ == "__main__":
    main()